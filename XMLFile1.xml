using System;
using OpenTK;
using OpenTK.Graphics;
using OpenTK.Graphics.OpenGL;
using OpenTK.Input;

namespace LineRenderingExample
{
    class Program : GameWindow
    {
        // Початкові координати лінії
        private Vector3 lineStart = new Vector3(-1f, 0f, 0f);
        private Vector3 lineEnd = new Vector3(1f, 0f, 0f);

        public Program(int width, int height) : base(width, height, GraphicsMode.Default, "Line Rendering Example")
        {
        }

        protected override void OnLoad(EventArgs e)
        {
            base.OnLoad(e);
            GL.ClearColor(Color4.Black);
        }

        protected override void OnRenderFrame(FrameEventArgs e)
        {
            base.OnRenderFrame(e);

            GL.Viewport(0, 0, Width, Height);
            GL.Clear(ClearBufferMask.ColorBufferBit);

            // Встановлення матриці перспективної проекції
            Matrix4 perspectiveMatrix = Matrix4.CreatePerspectiveFieldOfView(MathHelper.DegreesToRadians(45f), (float)Width / Height, 0.1f, 100f);
            GL.MatrixMode(MatrixMode.Projection);
            GL.LoadMatrix(ref perspectiveMatrix);

            // Встановлення матриці перегляду
            Matrix4 viewMatrix = Matrix4.LookAt(new Vector3(0f, 0f, 5f), Vector3.Zero, Vector3.UnitY);
            GL.MatrixMode(MatrixMode.Modelview);
            GL.LoadMatrix(ref viewMatrix);

            GL.Begin(PrimitiveType.Lines);
            GL.Color3(Color4.White); // Виберіть колір лінії

            GL.Vertex3(lineStart);
            GL.Vertex3(lineEnd);

            GL.End();

            SwapBuffers();
        }

        static void Main(string[] args)
        {
            using (Program game = new Program(800, 600))
            {
                game.Run(60.0);
            }
        }
    }
}
